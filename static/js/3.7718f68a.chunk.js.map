{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","hoc/withAuthRedirect.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","onBlur","updateStatus","onChange","e","target","autoFocus","reduxForm","form","onSubmit","handleSubmit","error","className","s2","formSummaryError","createField","Input","type","Textarea","Object","keys","profile","contacts","map","key","s","contact","ProfileData","lookingForAJob","lookingForAJobDescription","aboutMe","fullName","isOwner","onClick","contactTitle","contactValue","Contact","ProfileInfo","Preloader","descriptionBlock","src","photos","large","userPhoto","alt","mainPhoto","files","length","savePhoto","initialValues","formData","saveProfile","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postElements","posts","p","index","postsBlock","values","addPost","newPostText","AddNewPostForm","Field","name","component","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","updateNewPostText","text","action","updateNewPostTextActionCreator","addPostActionCreator","Profile","mapStateToPropsForRedirect","isAuth","auth","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","withRouter","RedirectComponent","to"],"mappings":"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","file":"static/js/3.7718f68a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__vvslZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__6f2ON\",\"contact\":\"ProfileInfo_contact__2hKmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3J393\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__13rCi\",\"posts\":\"MyPosts_posts__19Y5m\",\"postsBlock\":\"MyPosts_postsBlock__3MJQI\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n      <div>\r\n        <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n      </div>\r\n      }\r\n      {editMode &&\r\n      <div>\r\n        <input\r\n          value={status}\r\n          onBlur={deactivateEditMode}\r\n          onChange={onStatusChange}\r\n          autoFocus\r\n        />\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nimport s from './ProfileInfo.module.css'\r\nimport s2 from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <button>save</button>\r\n      {props.error && <div className={s2.formSummaryError}>\r\n        {props.error}\r\n      </div>}\r\n      <div>\r\n        <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Full name:</b> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n      </div>\r\n      <div>\r\n        <b>Skills:</b> {createField(\"Skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>About me:</b> {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div><b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n        return (\r\n          <div className={s.contact} key={key}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n          </div>\r\n        )\r\n      })}</div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'editProfile'})(ProfileDataForm)","import React, {useState} from \"react\"\r\n\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileInfo = (props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(() => {\r\n      setEditMode(false)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large || userPhoto} alt=\"\" className={s.mainPhoto}/>\r\n        {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        {editMode ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/> :\r\n          <ProfileData\r\n            profile={props.profile} isOwner={props.isOwner}\r\n            setEditMode={setEditMode}\r\n          />\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n  const {lookingForAJob, lookingForAJobDescription, aboutMe, fullName, contacts, isOwner} = {...props.profile}\r\n  return (\r\n    <div>\r\n      {props.isOwner &&\r\n      <button onClick={() => {\r\n        props.setEditMode(true)\r\n      }}\r\n      >\r\n        edit\r\n      </button>\r\n      }\r\n      <div>Looking for a job {lookingForAJob ? \"yes\" : \"no\"}</div>\r\n      {lookingForAJob && <div>Skills {lookingForAJobDescription}</div>}\r\n      <div>About me {aboutMe}</div>\r\n      <div>Full name {fullName}</div>\r\n      <div>Contacts: {Object.keys(contacts).map(key =>\r\n        <Contact key={key} contactTitle={key} contactValue={contacts[key]}/>\r\n      )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\"\r\n\r\nimport s from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://png.pngtree.com/element_our/20190522/ourlarge/pngtree-avatar-silhouette-picture-image_1067774.jpg\"\r\n        alt=\"ava\"\r\n      />\r\n      {props.message} likes {props.likesCount}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React, {memo} from \"react\"\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport Post from \"./Post/Post\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nimport s from \"./MyPosts.module.css\"\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = memo(props => {\r\n  const postElements = props.posts.map((p, index) =>\r\n    <Post\r\n      key={index}\r\n      message={p.message}\r\n      likesCount={p.likesCount}\r\n    />)\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>MyPosts</h3>\r\n      <AddNewPostForm onSubmit={onAddPost}/>\r\n      <div className={s.posts}>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div><Field\r\n        name=\"newPostText\"\r\n        component={Textarea}\r\n        validate={[required, maxLength10]}\r\n      /></div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts\r\n","import {connect} from \"react-redux\";\r\n\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {\r\n      const action = updateNewPostTextActionCreator(text)\r\n      dispatch(action)\r\n    },\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer =\r\n  connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React from \"react\"\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner} profile={props.profile}\r\n        status={props.status} updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto} saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push(\"login\")\r\n      }\r\n    }\r\n\r\n    if (this.props.isAuth) {\r\n      this.props.getUserProfile(userId)\r\n      this.props.getStatus(userId)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile, getStatus, updateStatus, savePhoto, saveProfile\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}